$black-ice: #2e93b3;
$dust-line: #d0a344;
$skull-rain: #47893b;
$red-crow: #bd1e2c;
$velvet-shell: #6e3c87;
$operation-health: #4a74a9;
$blood-orchid: #ca361c;
$white-noise: #006543;
$chimera: #ffc113;

$primary: #007bff;
$black: #1c1c1c;
$off-white: hsl(hue($primary), 5%, 85%);
$white: hsl(hue($primary), 5%, 90%);
$accent: #ff6e09;
$link: mix(#2d95cf, $primary, 90%);
$gray-dark: hsl(hue($primary), 3%, 5%);
$gray-darkish: lighten($gray-dark, 20%);
$gray: lighten($gray-dark, 40%);
$gray-light: hsl(hue($primary), 5%, 95%);
$blue-dark: rgb(16, 26, 36);
$trans-high: rgba(16, 16, 16, 0.25);
$trans-med: rgba(16, 16, 16, 0.5);
$trans-low: rgba(16, 16, 16, 0.75);
$success: mix(#17bebb, $primary, 95%);
$warn: mix(#ffc914, $primary, 95%);
$danger: mix(#b62f23, $primary, 95%);

$font-color: $white;
$font-subtle-color: $gray;
$bg-color: #181b1f;

$a: 45deg;
$borderradius: 5px;
$borderradius-rel: 0.4em;

$menu-height: 80px;
$menu-width: 280px;
$menu-background: darken($bg-color, 2%);
$menuMaxOpacity: 0.8;
$menu-hover-color: rgba(227, 214, 148, 1);

$screen-medium: 800px;
$screen-large: 1200px;
$screen-openmenu: $screen-large + $menu-width;

$operator-multiplyer: 0.5;
$operator-size: 128px * $operator-multiplyer;

$graphcolor-emea: #a22229;
$graphcolor-ncsa: #0082fb;
$graphcolor-apac: #24a55a;

$tdur: 200ms;

$loading-indicatorsize: 30px;

/**
 * font-scale function
 * fz(0) is the default font-size
 * fz(1) is slightly larger, fz(-1) smaller, etc
 */

// set the default sizes. we want to grow by a modifier of 1.2
$scale: (
    base: 1em,
    modifier: 1.2
);
@function pow($number, $exponent) {
    $value: 1;
    @if $exponent > 0 {
        @for $i from 1 through $exponent {
            $value: $value * $number;
        }
    }
    @return $value;
}
// the actual fontsize formula is the following: $base * ($modifier^$ratio)
// see
// http://www.modularscale.com/?1&em&1.2
// for a visualization (click on 'sass' in the sidebar to see the scale
@function fz($ratio) {
    $value: 1;
    @if ($ratio > 0) {
        $value: pow(map-get($scale, "modifier"), $ratio) * map-get($scale, "base");
    } @else {
        $value: pow((1 / map-get($scale, "modifier")), -$ratio) * map-get($scale, "base");
    }
    @return $value;
}
